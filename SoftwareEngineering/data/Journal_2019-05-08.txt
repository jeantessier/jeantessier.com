I found out about [[https://redis.io/topics/pubsub][Redis Pub/Sub]].  So far,
I've been doing all my publish-subscribe work using RabbitMQ, which has a very
rich feature set.  It's nice to see a different vision that is more minimalist.
In RabbitMQ, you can setup queues so they accumulate messages even when there
are no active subscribers.  It looks to me that you cannot do the same in Redis;
if the subscriber is not there when the message is published, they don't
receive it.

Some publish-subscribe technologies I've played with:

* [[https://www.rabbitmq.com/][RabbitMQ]]
* [[http://activemq.apache.org/][ActiveMQ]]
* [[https://aws.amazon.com/sns/][Amazon SNS]]

I like the decoupling between senders and receivers that I get when I use
publish-subscribe.  Seems much easier to me than relying on a service locator.
