I'm working on a piece of code in a Node Express server (in TypeScript) that
calls a gRPC service in the middle of processing requests.  The gRPC-generated
client code is asynchronous and uses callbacks.  So, I used =promisify= to make
the callbacks play well with =async/await=, and to ease error handling.

Then, I tried writing some tests using [[https://jestjs.io/][Jest]].  It has
very nice support for data-driven tests via its
=[[https://jestjs.io/docs/en/api#testeachtablename-fn-timeout][it.each]]=
method.

Mocking the gRPC calls for the unit tests, through =promisify=, was quite a
challenge to get right.  In the end, less proved to be more.  Instead of
building a mocked version of =promisify= that return a mocked version of the
gRPC classes, I only needed a mocked version of =promisify= that returns
something that behaves like the gRPC: a simple stub.
