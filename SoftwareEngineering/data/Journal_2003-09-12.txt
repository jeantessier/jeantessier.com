I'm catching blog fever.  I need to start expressing my views too.

Started a [[Books.html][reading journal]] to keep track of the
books I read and what I think of them.  I need to do the same for articles
somehow.

I have been struggling lately with how to define myself.  My web page
starts with "I am a software engineer," but is that really what I want to
project?  What do people read in this?  Here are some alternatives and what I
think of each:

<dl>
    <dt><b>programmer</b></dt>
    <dd>
        I write code.  That's what I do.  And I am very good at it,
        writing complex code that is highly flexible.  But some people think
        that programmers are nothing more than code monkeys, and that's not
        how I want to be perceived.  So I need something a little more fancy.
        Plus, when I write code, I do a lot of design too.  The two activities
        go hand in hand: do a little design, write a little code, repeat.
        This is not captured in most definitions of _programmer_.
    </dd>
    <dt><b>software developer</b></dt>
    <dd>
        Not quite the code monkey, but still quite low in the food chain.
        In people's mind, this is the new term for _programmer_, with all
        the baggage.
    </dd>
    <dt><b>software designer</b></dt>
    <dd>
        Feels a little pigeonholed.  People who usually care about this
        level of distinction also believe in rigid job seggregation.  The
        analyst analyzes.  The designer designs.  The programmer codes.  I
        don't see it that way.  I do any of the above at one time or
        another, depending on the need of the moment.
    </dd>
    <dt><b>software engineer</b></dt>
    <dd>
        Am I an engineer?  I majored in computer science.  In some places,
        that actually makes it illegal for me to use a title that includes the words
        _engineer_ or _engineering_.  And when I was in college,
        there was some competition between the computer science department and
        the engineering school, so I don't even _want_ to be called an
        engineer.  :-)
    </dd>
    <dt><b>software architect</b></dt>
    <dd>
        A lot of people say this is just title inflation.  Maybe it is a
        little pretentious.
    </dd>
    <dt><b>computer scientist</b></dt>
    <dd>
        I did major in computer science.  But to most people, computer
        scientists belong in academia and are disconnected from reality.
    </dd>
</dl>

Robert Grady, in
[[http://amzn.com/0137203845][Practical Software Metrics for Project Management and Process Improvement]],
says engineers are after solutions, whereas scientists are after knowledge.  I
tried to looked into it a little further and now there is a debate going on
regarding the nature of programming.  Is is an art?  A craft?  A science?
Engineering?  Here's my take on the subject:

<div class="table-wrapper">
<table class="centered-triplet">
    <thead>
        <tr>
            <th>endeavour</th>
            <th></th>
            <th>... what they're after</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>art</td>
            <td>=--&gt;=</td>
            <td>beauty, esthetics</td>
        </tr>
        <tr>
            <td>craft</td>
            <td>=--&gt;=</td>
            <td>well built</td>
        </tr>
        <tr>
            <td>engineering</td>
            <td>=--&gt;=</td>
            <td>pratical solution</td>
        </tr>
        <tr>
            <td>science</td>
            <td>=--&gt;=</td>
            <td>knowledge</td>
        </tr>
    </tbody>
</table>
</div>

Based on that, I think I'm a computer scientist, but not I am not formal
enough to belong in academia.  And I need to share my what I know a little
more.

I visited Martin Fowler's website and read his latest articles on
architecture and architects.  He has some good insights into what one should
look for in an _software architect_.  I would like to think it fitted
me.

Also found [[http://www.johnlevyconsulting.com/][John Levy]]'s
website and read some of his thoughts on process.  He's obviously given the
topic a lot of thought.  It is nice to see someone with his vast experience
who believes in eXtreme Programming.  I always have the impression that
high level managers from large firms are more of waterfall type.
